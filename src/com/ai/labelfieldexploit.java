package com.ai;

import net.rim.device.api.system.Bitmap;
import net.rim.device.api.ui.Color;
import net.rim.device.api.ui.Field;
import net.rim.device.api.ui.FieldChangeListener;
import net.rim.device.api.ui.Font;
import net.rim.device.api.ui.Graphics;
import net.rim.device.api.ui.XYEdges;
import net.rim.device.api.ui.component.ButtonField;
import net.rim.device.api.ui.component.Dialog;
import net.rim.device.api.ui.component.LabelField;
import net.rim.device.api.ui.container.HorizontalFieldManager;
import java.util.Vector;

public class labelfieldexploit extends LabelField 
{
	private HorizontalFieldManager hf;
	private Vector params;
	public labelfieldexploit(String value,long style, HorizontalFieldManager hf, Vector actionTuits)
	{
		super(value,style);
		this.hf=hf;
		this.params=actionTuits;
	}
	public boolean navigationClick(int status, int time)
	{
		
		if(hf.getFieldCount()==0)
		{
			this.buildbuttontool(this.hf);
			this.setText("-");
		}
		else
		{
			this.hf.deleteAll();
			this.setText("+");
		}
		return true;
	}
	private void buildbuttontool(HorizontalFieldManager mMenuManager)
	{
        /*for (int i = 0; i < 3; i++) {

            ButtonField button = new ButtonField(String.valueOf(i)); 
            button.setCookie(String.valueOf(i));
            button.setPadding(new XYEdges(0, 18, 0, 18));

            button.setChangeListener(new FieldChangeListener() {
                public void fieldChanged(Field field, int context) {
                    Dialog.inform("Button # " + (String) field.getCookie());
                }
            });*/
			for (int i=0; i<this.params.size();i++)
			{
				labelhyperlink detaillhl1=new labelhyperlink((parameter)this.params.elementAt(i) );
				detaillhl1.setPadding(new XYEdges(0, 5, 0, 5));
	            mMenuManager.add(detaillhl1);
			}
        //}
	}

}
